class Solution {
    static int[][] dir = new int[][]{{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
    
    public int closedIsland(int[][] grid) {
        int c = 0, n = grid.length, m = grid[0].length;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0){
                    if(solve(i, j, grid)) c++;
                }
            }
        }
        return c;
    }
    
    public static boolean solve(int i, int j, int[][] grid){
        int n=grid.length, m=grid[0].length;
        if(i>=0 && j>=0 && i<n && j<m){
            if(grid[i][j]==1) return true;
            grid[i][j]=1;
            boolean res=true;
            for(int[] d : dir){
                res = res & solve(i + d[0], j + d[1], grid);
            }
            return res;
        }
        return false;
    }
}