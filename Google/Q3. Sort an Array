class Solution {
    public int[] sortArray(int[] nums) {
        return mergeSort(nums, 0, nums.length -1);
    }

    public int[] mergeSort(int[] nums, int l, int r){
        if(l<r){
            int m = (l+r)/2;
            mergeSort(nums, l, m);
            mergeSort(nums, m+1, r);
            merge(nums, l, m, r);
        }
        return nums;
    }

    public void merge (int[] nums, int l , int m, int r){
        int l1 = m-l+1, l2 = r-m;
        int[] L = new int[l1];
        int[] R = new int[l2];
        for (int i = 0; i < l1; i++) {
            L[i] = nums[l + i];
        }
        for (int j = 0; j < l2; j++) {
            R[j] = nums[m + 1 + j];
        }
        int i = 0, j = 0, k = l;
        while(i<l1 && j<l2){
            if(L[i]<=R[j]){
                nums[k] = L[i];
                i++;
            }else {
                nums[k] = R[j];
                j++;
            }
            k++;
        }
        while(i<l1){
            nums[k] = L[i];
            i++;
            k++;
        }
        while(j<l2){
            nums[k] = R[j];
            j++;
            k++;
        }

    }
}