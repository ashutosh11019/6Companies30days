class Solution {
    public int maxSumMinProduct(int[] nums) {
        Stack<Integer> st = new Stack<>();
        long pre[] = new long[nums.length + 1], res = 0;
        for (int i = 0; i < nums.length; ++i) pre[i + 1] = pre[i] + nums[i];
        for (int i = 0; i <= nums.length; ++i) {
            while (!st.empty() && (i == nums.length || nums[st.peek()] > nums[i])) {
                int j = st.pop();
                res = Math.max(res, (pre[i] - pre[st.empty() ? 0 : st.peek() + 1]) * nums[j]);
            }
            st.push(i);
        }
        return (int)(res % 1000000007);
    }
}